#!/usr/bin/python
#Castro Rendon Virgilio
import re, subprocess

#Intenta hacer un ping a la ip, si no falla, muestra la ip
def tryPing(ip):
	ping = subprocess.check_output(("ping -c 2 %s" % ip), shell=True)
	print '\t%s IS UP' % ip

#Regresa la red donde se encuentra y el prefijo de la mascara
def getNetwork():
	ip, mascara= getIP()
	red, mbin, prefijo = [], [], 0
	for i in range(4):
		red.append(int(ip[i]) & int(mascara[i]))
		mbin.append(bin(int(mascara[i])))
	for octeto in mbin:
		for num in octeto:
			if num == '1':
				prefijo += 1
	return red, prefijo


#Obtiene la interfaz de red y la mascara
def getIP():
	interfaz = subprocess.check_output("route -n | grep UG",shell=True).split()[7]
	red = (subprocess.check_output('ifconfig '+interfaz+' | grep inet', shell=True)).split()
	return red[1].split('.'), red[3].split('.')


#Forma lista de hosts en la red actual
if __name__ == '__main__':
	base, prefijo = getNetwork()
	ips, hosts = [], 2**(32-prefijo)-2
	for i in range(hosts):
		if base[3] < 255:
			base[3] = base[3]+1
		else:
			base[3] = 0
			if base[2] < 255:
				base[2] = base[2]+1
			else:
				base[2] = 0
				if base[1] < 255:
					base[1] = base[1]+1
				else:
					base[1] = 0
					base[0] = base[0]+1
		ips.append('%s.%s.%s.%s' % (base[0],base[1],base[2],base[3]))
	for ip in ips: #Intenta conectarse a cada ip si falla (no se  ven), continua con la siguiente
		try:
			tryPing(ip)
		except:
			continue
